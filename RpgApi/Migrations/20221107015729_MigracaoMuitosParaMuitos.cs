using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    public partial class MigracaoMuitosParaMuitos : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 156, 26, 118, 217, 0, 103, 63, 218, 17, 203, 118, 114, 203, 47, 7, 72, 30, 64, 246, 28, 201, 239, 110, 160, 170, 101, 21, 45, 225, 130, 98, 159, 209, 83, 110, 46, 230, 153, 137, 164, 194, 246, 177, 105, 24, 120, 121, 115, 229, 44, 222, 53, 190, 189, 192, 173, 185, 221, 68, 255, 92, 10, 47, 159 }, new byte[] { 132, 137, 71, 118, 140, 51, 95, 134, 207, 236, 141, 192, 166, 48, 198, 42, 64, 109, 19, 162, 172, 101, 185, 14, 253, 143, 224, 113, 116, 178, 149, 229, 30, 56, 43, 243, 190, 195, 94, 244, 112, 161, 198, 83, 2, 250, 100, 9, 144, 192, 240, 167, 186, 20, 125, 138, 144, 176, 12, 178, 2, 245, 212, 36, 154, 225, 235, 142, 94, 84, 217, 172, 195, 118, 198, 111, 89, 188, 237, 27, 248, 47, 250, 1, 89, 86, 126, 55, 217, 107, 151, 121, 120, 162, 127, 233, 152, 71, 168, 59, 254, 193, 199, 243, 75, 233, 242, 26, 88, 236, 228, 135, 159, 251, 32, 64, 55, 102, 52, 144, 236, 8, 74, 17, 96, 139, 131, 242 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Usuarios",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 142, 186, 100, 29, 140, 177, 178, 38, 16, 68, 28, 24, 216, 48, 76, 83, 208, 99, 36, 203, 85, 99, 214, 129, 138, 168, 19, 48, 254, 72, 19, 201, 46, 100, 32, 118, 11, 60, 240, 186, 33, 175, 21, 252, 79, 131, 222, 132, 140, 218, 172, 163, 5, 3, 185, 89, 44, 41, 125, 213, 108, 43, 245, 214 }, new byte[] { 185, 3, 77, 63, 171, 71, 23, 106, 246, 143, 83, 118, 173, 223, 86, 47, 142, 203, 240, 231, 100, 114, 55, 160, 106, 131, 7, 64, 97, 11, 175, 202, 127, 170, 178, 46, 114, 176, 247, 169, 224, 248, 102, 22, 130, 64, 92, 25, 70, 148, 252, 209, 208, 91, 12, 135, 236, 193, 144, 72, 1, 64, 167, 198, 92, 174, 65, 146, 191, 111, 81, 183, 182, 199, 255, 174, 136, 247, 90, 156, 0, 161, 247, 141, 233, 152, 86, 170, 200, 3, 113, 241, 100, 184, 218, 3, 80, 142, 148, 187, 112, 148, 157, 153, 245, 237, 57, 145, 43, 195, 158, 102, 234, 146, 132, 164, 188, 64, 118, 201, 79, 3, 207, 112, 84, 197, 112, 166 } });
        }
    }
}
